# reload 
unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux config reloaded"

# set the leader key
unbind-key C-b
set -g prefix C-s
bind-key C-s send-prefix

set -g mouse on

# stop fedora setting the name
set-option -g allow-rename off

#fix the colors
set-option -g default-terminal "xterm-256color"
set-option -ga terminal-overrides ",xterm-256color:RGB"

# Start windows at index 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# vim keybinding, removed for vim-tmux-navigator
#bind C-h select-pane -L
#bind C-j select-pane -D
#bind C-k select-pane -U
#bind C-l select-pane -R

# Define Spacemacs-style window management keybindings
bind-key / new-window -c "#{pane_current_path}"  # Create a new window
bind-key v split-window -h                       # Split pane vertically (right window in Spacemacs)
bind-key s split-window -v                       # Split pane horizontally (below window in Spacemacs)
#bind-key d kill-pane                             # Close the current pane
bind-key n next-window                           # Switch to next window
bind-key p previous-window                       # Switch to previous window
bind-key 1 select-window -t 1                    # Select window 1
bind-key 2 select-window -t 2                    # Select window 2
bind-key 3 select-window -t 3                    # Select window 3
bind-key 4 select-window -t 4                    # Select window 4
bind-key w choose-window                         # Show window list


# yet another
# the issue is tmux needs to be run on the remove server first
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

# is_vim='tmux display-message -p "#{pane_current_command}" | grep -iqE "ssh"'
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# set the start bar to the top
set-option -g status-position top

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'fabioluciano/tmux-tokyo-night'
set -g @plugin 'jimeh/tmuxifier'

# vi mode for copy paste
#set-window-option -g mode-keys vi
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
#bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel 


#set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
